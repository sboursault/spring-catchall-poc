version: '2'
services:

  nginx:
    image: "nginx:1.13"
    ports:
    - "80:80"
    - "443:443" # ssl handshake
    links:
    - "treatment-api"
    volumes:
    #- "/host/path:/docker/path"
    - "./ext/nginx/default.conf:/etc/nginx/conf.d/default.conf"

  front-office:
    build: ./ext/spring-boot
    volumes:
    - "./front-office/build/libs/front-office-0.0.1-SNAPSHOT.jar:/app.jar"
    ports:
    - "8085:80"
    - "8005:8000" # remote debug
    links:
    - "zookeeper"

  treatment-api:
    build: ./ext/spring-boot
    volumes:
    - "./treatment/treatment-api/build/libs/treatment-api-0.0.1-SNAPSHOT.jar:/app.jar"
    #- "./ext/spring-boot/inspectit-agent/inspectit-agent.jar:/inspectit-agent.jar"
    ports:
    - "8080:80"
    #- "8000:8000" # remote debug
    links:
    - "zookeeper"
    - "rabbitmq"
    - "db:asylumdb" # db service will be reachable with hosts "db" and "asylumdb"
    environment:
    - "SPRING_APPLICATION_BASE_URL=http://localhost:8080" # overload application propertry "spring.application.base-url"
    #command: "-javaagent:/inspectit-agent.jar -Dinspectit.repository=inspectit-cmr:9070 -Dinspectit.agent.name=treatment-api"

  research-api:
    build: ./ext/spring-boot
    volumes:
    - "./research/research-api/build/libs/research-api-0.0.1-SNAPSHOT.jar:/app.jar"
    ports:
    - "8081:80"
    #- "8000:8000" # remote debug
    links:
    - "zookeeper"
    - "rabbitmq"
    environment:
    - "SPRING_APPLICATION_BASE_URL=http://localhost:8081" # overload application propertry "spring.application.base-url"


    # test agent with this c:d : java -javaagent:/inspectit-agent.jar -Dinspectit.repository=inspectit-cmr:9070 -Dinspectit.agent.name=testtest -version


  #logistic-api:
  #  build: ./etc/spring-boot
  #  ports:
  #  - "8081:80"
  #  - "8001:8000" # remote debug
  #  links:
  #  - "db:asylumdb" # db service will be reachable with hosts "db" and "asylumdb"
  #  volumes:
  #  - "./logistic/logistic-api/build/libs/logistic-api-0.1.jar:/app.jar"

  db:
    image: "mongo:3.0"
    command: --smallfiles

  redis:
    image: "redis:4.0"
    expose:
    - "6379"
  #redis-commander:
  #  image: "rediscommander/redis-commander:latest"
  #  links:
  #  - "redis:redis"
  #  ports:
  #  - "6380:8081"
  #  environment:
  #  - "REDIS_HOSTS=local:redis:6379"

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672" # administration

  #elasticsearch:
  #  image: "elasticsearch:5.6"
  #  ports:
  #  - "9200:9200"
  #  - "9300:9300"
  #kibana:
  #  image: "kibana:5.6"
  #  ports:
  #  - "5601:5601"
  #  links:
  #  - elasticsearch
  #logstash:
  #  image: "logstash:5.6"
  #  ports:
  #  - "5000:5000"
  #  links:
  #  - elasticsearch
  #  volumes:
  #  - ./ext/logstash:/etc/logstash/conf.d
  #  command: logstash -f /etc/logstash/conf.d/logstash.conf

  zipkin:
    image: openzipkin/zipkin
    ports:
    - "9411:9411"
    environment:
    - "JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx64m" # limit heap size

  zookeeper:
    image: "zookeeper:3.4"
    restart: always
    ports:
      - 2181:2181

  #zookeeper-web:
  #  image: elkozmon/zoonavigator-web:latest
  #  ports:
  #   - "9000:8000"
  #  environment:
  #    API_HOST: "zookeeper-api"
  #    API_PORT: 9000
  #  links:
  #   - zookeeper-api
  #  restart: always
  #zookeeper-api:
  #  image: elkozmon/zoonavigator-api:latest
  #  environment:
  #    SERVER_HTTP_PORT: 9000
  #  restart: always

  inspectit-cmr:
    image: inspectit/cmr:1.8.5.101
    ports:
    - "8182:8182"
    - "9070:9070" # communication with the agent
    environment:
    - "BUFFER_SIZE=500" # memory buffer (default is 1500M, must not be larger than the available memory)

